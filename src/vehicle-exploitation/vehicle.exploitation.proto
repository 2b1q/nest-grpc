syntax = "proto3";

package vehicle;

service VehicleExploitationService {
    rpc AddVehicle (Vehicle) returns (VehicleId);
    // AddSnapshot method -> inserts one snapshot and returns OperationResult contract
    rpc AddSnapshot (Snapshot) returns (OperationResult);
}

// message contract for Vehicle insertion
message Vehicle {
    string id = 1; // uuid (autogenerated field on server/service side)
    int32 axisesAmount = 2; // amount of axises
    string vin = 3; // VIN
    string carNumber = 4;
    string manufacturer = 5; // e.g. FORD
    string model = 6; // e.g. MONDEO
    int32 modelYear = 7; // e.g. 2009
    string productionDate = 8; // e.g. 01.01.2009
    Driver driver = 9; 
}

message VehicleId {
    string id = 1; // uuid
}

// Driver contract - driver info
message Driver {
    int32 age = 1;
    string name = 2;
    string secondName = 3;
    string lastName = 4;
    string license = 5; // driver license (optional)
}

// (Snapshot contract) common vehicle data at moment (similar to usage_snapshot.json)
message Snapshot {
    int32 id = 1; // snapshot ID
    string timestamp = 2; // (snapshot timestamp) Timestamp message type since protobuf 3.0
    int32 totalWeight = 3;
    int32 cargoWeight = 4;
    repeated SnapshotData data = 5; 
    string vehicleId = 6; // link to vehicle 
}

// (SnapshotData contract) axis state array at moment (similar to usage_snapshot_data.json)
message SnapshotData {
    int32 weight = 1;
    bool lifted = 2;
    int32 axisId = 3;
    // int32 id = 4; snapshotId -> not needed in this struct
}

// message contract for OperationResult
message OperationResult {
    bool status = 1; // result of operation [ true, false ]
}